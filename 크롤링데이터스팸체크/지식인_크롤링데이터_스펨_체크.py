# -*- coding: utf-8 -*-
"""지식인 크롤링데이터 스펨?체크.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qased54zs2JLqHtFws8Th3jutdQhc5Q6
"""

!pip install tensorflow

import numpy as np
import tensorflow as tf
import pandas as pd
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense, Dropout

# CSV 파일 불러오기
data = pd.read_csv('/content/크롤링_데이터(ver.2).csv')  # 스팸 데이터가 포함된 CSV 파일을 사용하세요

# 데이터 분리
messages = data['텍스트'].tolist()
labels = data['라벨'].tolist()

# 텍스트 토큰화
tokenizer = Tokenizer()
tokenizer.fit_on_texts(messages)
total_words = len(tokenizer.word_index) + 1

# 시퀀스 생성 및 패딩
input_sequences = tokenizer.texts_to_sequences(messages)
max_sequence_len = max([len(x) for x in input_sequences])
input_sequences = pad_sequences(input_sequences, maxlen=max_sequence_len, padding='post')

# 모델 구성
model = Sequential()
model.add(Embedding(total_words, 64, input_length=max_sequence_len))
model.add(LSTM(64, return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(32))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# 모델 학습
model.fit(np.array(input_sequences), np.array(labels), epochs=50)

# 예측
test_msg = ["스팸"]
test_seq = tokenizer.texts_to_sequences(test_msg)
test_seq = pad_sequences(test_seq, maxlen=max_sequence_len, padding='post')
prediction = model.predict(test_seq)
print("스팸 확률:", prediction[0][0])

